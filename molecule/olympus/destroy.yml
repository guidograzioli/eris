---
- name: Destroy
  hosts: localhost
  connection: local
  gather_facts: true
  no_log: False #"{{ molecule_no_log }}"
  vars:
    hera_home: "{{ lookup('env', 'HERA_HOME') }}"
    hera_debug: "{{ lookup('env', 'HERA_DEBUG') | default(False) }}"
    workdir: "{{ lookup('env', 'WORKDIR') }}"
    job_name: "{{ lookup('env', 'JOB_NAME') | default('ansible') }}-slave"
  tasks:


    - set_fact:
        platforms: "{{ molecule_yml.platforms }}"

    - set_fact:
        molecule_yml:
          platforms:
          - { name: 'instance' }

    - debug:
        var: molecule_yml.platforms[0]



    - assert:
        that:
          - hera_home is defined
          - workdir is defined
        quiet: true

    - stat:
        path: "{{ workdir }}"
      register: is_workdir

    - assert:
        that:
          - is_workdir is defined
          - is_workdir.stat is defined
          - is_workdir.stat.exists is defined
          - is_workdir.stat.exists
        quiet: true

    - block:
        - command: >
            bash -x {{ hera_home }}/hera.sh stop
          args:
            chdir: "{{ workdir }}"
          no_log: False
          register: hera_stop
          environment:
            JOB_NAME: "{{ job_name }}"
            HERA_DEBUG: true
            HERA_HOSTNAME: "olympus"
      rescue:
        - debug:
            msg: "No container to destroy."

    - debug:
        msg: "{{ hera_stop }}"
      when:
        - hera_debug

    # Mandatory configuration for Molecule to function.
    - name: Populate instance config
      set_fact:
        instance_conf: {}

    - name: Dump instance config
      copy:
        content: |
          # Molecule managed

          {{ instance_conf | to_json | from_json | to_yaml }}
        dest: "{{ molecule_instance_config }}"
      when: server.changed | default(false) | bool
